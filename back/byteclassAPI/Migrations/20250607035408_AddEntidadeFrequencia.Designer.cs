// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using byteclassAPI.Data;

#nullable disable

namespace byteclassAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250607035408_AddEntidadeFrequencia")]
    partial class AddEntidadeFrequencia
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AlunoMateria", b =>
                {
                    b.Property<int>("AlunosUserId")
                        .HasColumnType("int");

                    b.Property<int>("MateriasId")
                        .HasColumnType("int");

                    b.HasKey("AlunosUserId", "MateriasId");

                    b.HasIndex("MateriasId");

                    b.ToTable("AlunosMaterias", (string)null);
                });

            modelBuilder.Entity("byteclassAPI.Models.Conteudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MateriaId");

                    b.ToTable("Conteudos", (string)null);
                });

            modelBuilder.Entity("byteclassAPI.Models.Frequencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<bool>("Presente")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("MateriaId");

                    b.ToTable("Frequencias", (string)null);
                });

            modelBuilder.Entity("byteclassAPI.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int?>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Materias", (string)null);
                });

            modelBuilder.Entity("byteclassAPI.Models.Nota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("MateriaId");

                    b.ToTable("Notas", (string)null);
                });

            modelBuilder.Entity("byteclassAPI.Models.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PeriodoLetivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Turmas", (string)null);
                });

            modelBuilder.Entity("byteclassAPI.Models.Usuario", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Usuarios", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("byteclassAPI.Models.Admin", b =>
                {
                    b.HasBaseType("byteclassAPI.Models.Usuario");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("byteclassAPI.Models.Aluno", b =>
                {
                    b.HasBaseType("byteclassAPI.Models.Usuario");

                    b.Property<string>("NomeResponsavel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("byteclassAPI.Models.Professor", b =>
                {
                    b.HasBaseType("byteclassAPI.Models.Usuario");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Formacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Professores", (string)null);
                });

            modelBuilder.Entity("AlunoMateria", b =>
                {
                    b.HasOne("byteclassAPI.Models.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunosUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("byteclassAPI.Models.Materia", null)
                        .WithMany()
                        .HasForeignKey("MateriasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("byteclassAPI.Models.Conteudo", b =>
                {
                    b.HasOne("byteclassAPI.Models.Materia", "Materia")
                        .WithMany("Conteudos")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("byteclassAPI.Models.Frequencia", b =>
                {
                    b.HasOne("byteclassAPI.Models.Aluno", "Aluno")
                        .WithMany("Frequencias")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("byteclassAPI.Models.Materia", "Materia")
                        .WithMany("Frequencias")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("byteclassAPI.Models.Materia", b =>
                {
                    b.HasOne("byteclassAPI.Models.Professor", "Professor")
                        .WithMany("Materias")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("byteclassAPI.Models.Turma", "Turma")
                        .WithMany("Materias")
                        .HasForeignKey("TurmaId");

                    b.Navigation("Professor");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("byteclassAPI.Models.Nota", b =>
                {
                    b.HasOne("byteclassAPI.Models.Aluno", "Aluno")
                        .WithMany("Notas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("byteclassAPI.Models.Materia", "Materia")
                        .WithMany("Notas")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("byteclassAPI.Models.Admin", b =>
                {
                    b.HasOne("byteclassAPI.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("byteclassAPI.Models.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("byteclassAPI.Models.Aluno", b =>
                {
                    b.HasOne("byteclassAPI.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("byteclassAPI.Models.Aluno", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("byteclassAPI.Models.Professor", b =>
                {
                    b.HasOne("byteclassAPI.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("byteclassAPI.Models.Professor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("byteclassAPI.Models.Materia", b =>
                {
                    b.Navigation("Conteudos");

                    b.Navigation("Frequencias");

                    b.Navigation("Notas");
                });

            modelBuilder.Entity("byteclassAPI.Models.Turma", b =>
                {
                    b.Navigation("Materias");
                });

            modelBuilder.Entity("byteclassAPI.Models.Aluno", b =>
                {
                    b.Navigation("Frequencias");

                    b.Navigation("Notas");
                });

            modelBuilder.Entity("byteclassAPI.Models.Professor", b =>
                {
                    b.Navigation("Materias");
                });
#pragma warning restore 612, 618
        }
    }
}
