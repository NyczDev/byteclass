// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using byteclassAPI.Data;

#nullable disable

namespace byteclassAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250517235742_RecreateDB")]
    partial class RecreateDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("byteclassAPI.Models.Usuario", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Usuarios", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("byteclassAPI.Models.Admin", b =>
                {
                    b.HasBaseType("byteclassAPI.Models.Usuario");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("byteclassAPI.Models.Aluno", b =>
                {
                    b.HasBaseType("byteclassAPI.Models.Usuario");

                    b.Property<string>("NomeResponsavel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("byteclassAPI.Models.Professor", b =>
                {
                    b.HasBaseType("byteclassAPI.Models.Usuario");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Formacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Professores", (string)null);
                });

            modelBuilder.Entity("byteclassAPI.Models.Admin", b =>
                {
                    b.HasOne("byteclassAPI.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("byteclassAPI.Models.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("byteclassAPI.Models.Aluno", b =>
                {
                    b.HasOne("byteclassAPI.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("byteclassAPI.Models.Aluno", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("byteclassAPI.Models.Professor", b =>
                {
                    b.HasOne("byteclassAPI.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("byteclassAPI.Models.Professor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
